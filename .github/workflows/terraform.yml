name: "Terraform Actions"

on:
    push:
        branches:
            - feature/add_plan_and_apply_to_github_actions
    # pull_request_target:
    #     types: [opened]
    #     branches:
    #         - development

env:
    TF_INPUT: true
    TF_IN_AUTOMATION: true
    TF_LOG: INFO
    TF_VAR_aws_instance_count: ${{ vars.AWS_INSTANCE_COUNT }}
    TF_VAR_aws_instance_type: ${{ vars.AWS_INSTANCE_TYPE }}
    TF_VAR_billing_code: ${{ vars.BILLING_CODE }}
    TF_VAR_vpc_cidr_block: ${{ vars.VPC_CIDR_BLOCK }}
    TF_VAR_vpc_subnet_count: ${{ vars.VPC_SUBNET_COUNT }}
    TF_VAR_vpc_subnet_mask: ${{ vars.VPC_SUBNET_MASK }}
    TF_VAR_project: ${{ vars.PROJECT }}


permissions:
    id-token: write
    contents: read

jobs:
  plan_and_apply:
    name: "Terraform"
    runs-on: ubuntu-latest
    environment: development

    defaults:
      run:
        shell: bash

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
            role-to-assume: ${{ vars.AWS_ROLE_TO_ASSUME }}
            role-session-name: ${{ vars.SESSION_NAME }}
            aws-region: ${{ vars.AWS_REGION }}
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: | 
            terraform init -reconfigure \
            --backend-config="bucket=${{ vars.BACKEND_BUCKET }}" \
            --backend-config="key=${{ vars.BACKEND_KEY }}" \
            --backend-config="region=${{ vars.AWS_REGION }}" \
            --dynamodb-table=${{ vars.DYNAMODB_TABLE }} \
            --encrypt=true

      - name: Terraform Format
        id: format
        run: terraform fmt -check
    
      - name: Terraform Workspace
        id: workspace
        run: terraform workspace new ${{ vars.WORKSPACE_NAME }} || terraform workspace select ${{ vars.WORKSPACE_NAME }}

      - name: Terraform Validate
        id: validate
        if: (success() || failure())
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: terraform plan
    
      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
